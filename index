function init() {
            setupNavigation();
            setupFilters();
            setupAdvancedFilters();
            setupSearch();
            setupLocationButton();
            setupEventFilters();
            renderBars(appData.bars);
            renderFriends();
            renderFavorites();
            renderEvents();
        }

        // Toggle advanced filters panel
        function toggleAdvancedFilters() {
            const panel = document.getElementById('advancedFiltersPanel');
            panel.classList.toggle('expanded');
        }

        // Setup advanced filters
        function setupAdvancedFilters() {
            const advancedFilterItems = document.querySelectorAll('.filter-item-compact');
            
            advancedFilterItems.forEach(item => {
                item.addEventListener('click', () => {
                    const filterValue = item.getAttribute('data-filter');
                    
                    if (appData.advancedFilters.has(filterValue)) {
                        appData.advancedFilters.delete(filterValue);
                        item.classList.remove('selected');
                    } else {
                        appData.advancedFilters.add(filterValue);
                        item.classList.add('selected');
                    }
                    
                    updateAdvancedFiltersDisplay();
                    filterBarsAdvanced();
                });
            });
        }

        // Update advanced filters display
        function updateAdvancedFiltersDisplay() {
            const selectedSection = document.getElementById('selectedFiltersCompact');
            const tagsContainer = document.getElementById('filterTagsCompact');

            if (appData.advancedFilters.size === 0) {
                selectedSection.style.display = 'none';
                return;
            }

            selectedSection.style.display = 'block';
            tagsContainer.innerHTML = '';

            appData.advancedFilters.forEach(filterValue => {
                const filterItem = document.querySelector(`[data-filter="${filterValue}"]`);
                const filterText = filterItem ? filterItem.textContent : filterValue;

                const tag = document.createElement('div');
                tag.className = 'filter-tag-compact';
                tag.innerHTML = `
                    ${filterText}
                    <span class="remove" onclick="removeAdvancedFilter('${filterValue}')">×</span>
                `;
                tagsContainer.appendChild(tag);
            });
        }

        // Remove advanced filter
        function removeAdvancedFilter(filterValue) {
            appData.advancedFilters.delete(filterValue);
            const filterItem = document.querySelector(`[data-filter="${filterValue}"]`);
            if (filterItem) {
                filterItem.classList.remove('selected');
            }
            updateAdvancedFiltersDisplay();
            filterBarsAdvanced();
        }

        // Filter bars with advanced filters
        function filterBarsAdvanced() {
            let filteredBars = appData.bars;
            
            // Apply basic filters first
            if (appData.activeFilters.length > 0) {
                filteredBars = filteredBars.filter(bar => {
                    return appData.activeFilters.some(filter => bar.features.includes(filter));
                });
            }
            
            // Apply advanced filters
            if (appData.advancedFilters.size > 0) {
                filteredBars = filteredBars.filter(bar => {
                    return Array.from(appData.advancedFilters).every(filter => {
                        // Check features
                        if (bar.features.includes(filter)) return true;
                        
                        // Check quarter
                        if (bar.quarter === filter) return true;
                        
                        // Check bar type
                        if (bar.type.toLowerCase().includes(filter.replace('-', ' '))) return true;
                        
                        return false;
                    });
                });
            }
            
            renderBars(filteredBars);
        }<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SOIF MyBarFinder - MVP</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #4A1A5C 0%, #2D0B36 100%);
            min-height: 100vh;
            color: #333;
            overflow-x: hidden;
        }

        /* Splash Screen */
        .splash-screen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            background: linear-gradient(135deg, #4A1A5C 0%, #2D0B36 100%);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            z-index: 10000;
            opacity: 1;
            transition: all 0.8s ease;
        }

        .splash-screen.hidden {
            opacity: 0;
            transform: scale(1.1);
            pointer-events: none;
        }

        .splash-logo {
            width: 140px;
            height: 140px;
            background: rgba(255, 107, 107, 0.15);
            border-radius: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 40px;
            backdrop-filter: blur(20px);
            border: 3px solid rgba(255, 142, 83, 0.3);
            box-shadow: 0 25px 80px rgba(255, 107, 107, 0.2);
            animation: splashPulse 2s ease-in-out infinite;
        }

        .wine-glass {
            position: relative;
            width: 60px;
            height: 80px;
        }

        .wine-glass::before {
            content: '';
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 40px;
            height: 40px;
            background: transparent;
            border: 4px solid #FF8E53;
            border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
            border-bottom: 4px solid transparent;
        }

        .wine-glass::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 4px;
            height: 40px;
            background: linear-gradient(180deg, #FF6B6B, #FF8E53);
            border-radius: 2px;
        }

        .wine-glass .base {
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 30px;
            height: 4px;
            background: linear-gradient(90deg, #FF6B6B, #FF8E53);
            border-radius: 2px;
        }

        .wine-liquid {
            position: absolute;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            width: 30px;
            height: 25px;
            background: linear-gradient(180deg, #FF6B6B, #FF8E53);
            border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
            animation: liquidMove 2s ease-in-out infinite;
        }

        .splash-title {
            font-size: 56px;
            font-weight: 800;
            color: #FF8E53;
            margin-bottom: 20px;
            text-shadow: 0 6px 25px rgba(255, 107, 107, 0.4);
            letter-spacing: 4px;
        }

        .splash-subtitle {
            font-size: 20px;
            color: rgba(255, 142, 83, 0.8);
            font-weight: 300;
            text-align: center;
            max-width: 320px;
            line-height: 1.5;
        }

        .loading-dots {
            display: flex;
            gap: 10px;
            margin-top: 50px;
        }

        .dot {
            width: 14px;
            height: 14px;
            background: rgba(255, 142, 83, 0.7);
            border-radius: 50%;
            animation: loadingDots 1.4s ease-in-out infinite both;
        }

        .dot:nth-child(1) { animation-delay: -0.32s; }
        .dot:nth-child(2) { animation-delay: -0.16s; }
        .dot:nth-child(3) { animation-delay: 0s; }

        @keyframes splashPulse {
            0%, 100% { transform: scale(1); box-shadow: 0 25px 80px rgba(255, 107, 107, 0.2); }
            50% { transform: scale(1.05); box-shadow: 0 30px 100px rgba(255, 107, 107, 0.3); }
        }

        @keyframes liquidMove {
            0%, 100% { transform: translateX(-50%) scale(1); }
            50% { transform: translateX(-50%) scale(1.1, 0.9); }
        }

        @keyframes loadingDots {
            0%, 80%, 100% { transform: scale(0); opacity: 0.5; }
            40% { transform: scale(1); opacity: 1; }
        }

        /* App Container */
        .app-container {
            max-width: 414px;
            margin: 0 auto;
            background: #fff;
            min-height: 100vh;
            position: relative;
            box-shadow: 0 0 40px rgba(74, 26, 92, 0.4);
            opacity: 0;
            transition: opacity 0.8s ease 0.5s;
        }

        .app-container.visible {
            opacity: 1;
        }

        .header {
            background: linear-gradient(135deg, #4A1A5C 0%, #2D0B36 100%);
            padding: 40px 20px 30px;
            text-align: center;
            color: white;
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,142,83,0.1) 0%, transparent 70%);
            animation: rotate 20s linear infinite;
        }

        @keyframes rotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .header-logo {
            width: 90px;
            height: 90px;
            margin: 0 auto 20px;
            background: rgba(255, 142, 83, 0.15);
            border-radius: 22px;
            display: flex;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(15px);
            border: 2px solid rgba(255, 142, 83, 0.3);
            position: relative;
            z-index: 1;
            box-shadow: 0 10px 30px rgba(255, 107, 107, 0.2);
        }

        .wine-glass-small {
            position: relative;
            width: 35px;
            height: 50px;
        }

        .wine-glass-small::before {
            content: '';
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 25px;
            height: 25px;
            background: transparent;
            border: 3px solid #FF8E53;
            border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
            border-bottom: 3px solid transparent;
        }

        .wine-glass-small::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 3px;
            height: 25px;
            background: linear-gradient(180deg, #FF6B6B, #FF8E53);
            border-radius: 1px;
        }

        .wine-glass-small .base-small {
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 18px;
            height: 3px;
            background: linear-gradient(90deg, #FF6B6B, #FF8E53);
            border-radius: 1px;
        }

        .wine-liquid-small {
            position: absolute;
            top: 6px;
            left: 50%;
            transform: translateX(-50%);
            width: 18px;
            height: 14px;
            background: linear-gradient(180deg, #FF6B6B, #FF8E53);
            border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
        }

        .header h1 {
            font-size: 36px;
            font-weight: bold;
            margin-bottom: 8px;
            position: relative;
            z-index: 1;
            color: #FF8E53;
            text-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
        }

        .header .tagline {
            font-size: 17px;
            opacity: 0.9;
            position: relative;
            z-index: 1;
            color: rgba(255, 142, 83, 0.9);
        }

        /* Navigation */
        .nav-tabs {
            display: flex;
            background: #f8f9fa;
            border-bottom: 2px solid rgba(74, 26, 92, 0.1);
            overflow-x: auto;
        }

        .nav-tab {
            flex: 1;
            min-width: 65px;
            padding: 16px 6px;
            text-align: center;
            background: #f8f9fa;
            border: none;
            color: #6c757d;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 12px;
            white-space: nowrap;
        }

        .nav-tab.active {
            background: #fff;
            color: #4A1A5C;
            border-bottom: 3px solid #FF6B6B;
        }

        .content {
            padding: 20px;
            min-height: 500px;
        }

        .hidden {
            display: none;
        }

        /* Search Section */
        .search-box {
            position: relative;
            margin-bottom: 20px;
        }

        .search-input {
            width: 100%;
            padding: 15px 20px 15px 50px;
            border: 2px solid rgba(74, 26, 92, 0.1);
            border-radius: 25px;
            font-size: 16px;
            background: #f8f9fa;
        }

        .search-input:focus {
            outline: none;
            border-color: #4A1A5C;
            background: #fff;
            box-shadow: 0 0 0 3px rgba(74, 26, 92, 0.1);
        }

        .search-icon {
            position: absolute;
            left: 18px;
            top: 50%;
            transform: translateY(-50%);
            color: #4A1A5C;
            font-size: 18px;
        }

        /* Filters */
        .filters {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
            margin-bottom: 25px;
        }

        .filter-btn {
            padding: 12px 15px;
            border: 2px solid rgba(74, 26, 92, 0.15);
            border-radius: 15px;
            background: #f8f9fa;
            color: #4A1A5C;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
        }

        .filter-btn:hover {
            border-color: #FF6B6B;
            transform: translateY(-2px);
            background: rgba(255, 107, 107, 0.05);
        }

        .filter-btn.active {
            background: linear-gradient(135deg, #4A1A5C, #2D0B36);
            color: #fff;
            border-color: transparent;
            box-shadow: 0 4px 15px rgba(74, 26, 92, 0.3);
        }

        /* Bars Grid */
        .bars-grid {
            display: grid;
            gap: 15px;
        }

        .bar-card {
            background: #fff;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 4px 15px rgba(74, 26, 92, 0.1);
            border: 1px solid rgba(74, 26, 92, 0.05);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .bar-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(74, 26, 92, 0.15);
            border-color: rgba(255, 107, 107, 0.3);
        }

        .bar-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 10px;
        }

        .bar-name {
            font-size: 18px;
            font-weight: bold;
            color: #2c3e50;
        }

        .bar-type {
            font-size: 14px;
            color: #4A1A5C;
            font-weight: 600;
        }

        .heart-btn {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: #ccc;
            transition: color 0.3s ease;
        }

        .heart-btn.liked {
            color: #FF6B6B;
        }

        .bar-features {
            display: flex;
            flex-wrap: wrap;
            gap: 6px;
            margin: 10px 0;
        }

        .feature-tag {
            background: rgba(255, 107, 107, 0.1);
            color: #FF6B6B;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }

        .bar-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 15px;
        }

        .rating {
            color: #ffc107;
            font-weight: bold;
        }

        .distance {
            color: #6c757d;
            font-size: 14px;
        }

        .visitors {
            font-size: 12px;
            color: #28a745;
            background: rgba(40, 167, 69, 0.1);
            padding: 4px 8px;
            border-radius: 10px;
        }

        /* Events */
        .events-header {
            margin-bottom: 25px;
        }

        .events-title {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .events-title h2 {
            font-size: 24px;
            font-weight: bold;
            color: #2c3e50;
            margin: 0;
        }

        .create-event-btn {
            background: linear-gradient(135deg, #4A1A5C, #2D0B36);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(74, 26, 92, 0.3);
        }

        .create-event-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(74, 26, 92, 0.4);
        }

        .events-filters {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
            overflow-x: auto;
        }

        .event-filter-btn {
            padding: 8px 16px;
            border: 2px solid rgba(74, 26, 92, 0.15);
            border-radius: 20px;
            background: #f8f9fa;
            color: #4A1A5C;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            white-space: nowrap;
        }

        .event-filter-btn.active {
            background: linear-gradient(135deg, #4A1A5C, #2D0B36);
            color: white;
            border-color: transparent;
        }

        .events-list {
            display: grid;
            gap: 15px;
        }

        .event-card {
            background: #fff;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 4px 15px rgba(74, 26, 92, 0.1);
            border: 1px solid rgba(74, 26, 92, 0.05);
            transition: all 0.3s ease;
            position: relative;
        }

        .event-card.popular {
            border: 2px solid #FF6B6B;
        }

        .event-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            background: #FF6B6B;
            color: white;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }

        .event-title {
            font-size: 18px;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 5px;
        }

        .event-bar {
            color: #4A1A5C;
            font-weight: 600;
            font-size: 14px;
            margin-bottom: 10px;
        }

        .event-datetime {
            display: flex;
            gap: 15px;
            color: #6c757d;
            font-size: 14px;
            margin-bottom: 10px;
        }

        .event-description {
            color: #495057;
            font-size: 14px;
            margin-bottom: 15px;
        }

        .event-actions {
            display: flex;
            gap: 10px;
        }

        .join-btn {
            flex: 1;
            padding: 10px;
            border: 2px solid #28a745;
            border-radius: 10px;
            background: #fff;
            color: #28a745;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .join-btn.joined {
            background: #28a745;
            color: white;
        }

        .share-btn {
            padding: 10px 15px;
            border: 2px solid #FF6B6B;
            border-radius: 10px;
            background: #fff;
            color: #FF6B6B;
            cursor: pointer;
        }

        /* Social */
        .friends-section {
            margin-bottom: 30px;
        }

        .section-title {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 15px;
            color: #2c3e50;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .friends-list {
            display: flex;
            gap: 15px;
            overflow-x: auto;
            padding-bottom: 10px;
        }

        .friend-item {
            flex-shrink: 0;
            text-align: center;
            cursor: pointer;
        }

        .friend-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4A1A5C, #2D0B36);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 8px;
            position: relative;
            color: white;
            font-size: 24px;
        }

        .online-dot {
            position: absolute;
            bottom: 2px;
            right: 2px;
            width: 16px;
            height: 16px;
            background: #28a745;
            border-radius: 50%;
            border: 2px solid #fff;
        }

        .friend-name {
            font-size: 12px;
            font-weight: 600;
            color: #495057;
        }

        .friend-location {
            font-size: 10px;
            color: #6c757d;
        }

        /* Profile */
        .profile-header {
            background: linear-gradient(135deg, #4A1A5C 0%, #2D0B36 100%);
            color: white;
            padding: 30px 20px;
            text-align: center;
            position: relative;
            margin: -20px -20px 30px -20px;
            overflow: hidden;
        }

        .profile-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,142,83,0.1) 0%, transparent 70%);
            animation: rotate 20s linear infinite;
        }

        .profile-avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background: rgba(255, 142, 83, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 20px;
            position: relative;
            border: 4px solid rgba(255, 142, 83, 0.3);
            backdrop-filter: blur(10px);
            z-index: 1;
        }

        .avatar-text {
            font-size: 36px;
            font-weight: bold;
            color: #FF8E53;
        }

        .edit-avatar-btn {
            position: absolute;
            bottom: 5px;
            right: 5px;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background: #FF6B6B;
            border: none;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            box-shadow: 0 2px 8px rgba(255, 107, 107, 0.3);
            color: white;
        }

        .profile-name {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 8px;
            position: relative;
            z-index: 1;
            color: #FF8E53;
        }

        .profile-email {
            font-size: 16px;
            opacity: 0.9;
            margin-bottom: 25px;
            position: relative;
            z-index: 1;
            color: rgba(255, 142, 83, 0.8);
        }

        .profile-stats {
            display: flex;
            justify-content: space-around;
            background: rgba(255, 142, 83, 0.1);
            border-radius: 15px;
            padding: 20px;
            backdrop-filter: blur(10px);
            position: relative;
            z-index: 1;
        }

        .stat {
            text-align: center;
        }

        .stat-number {
            display: block;
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 5px;
            color: #FF8E53;
        }

        .stat-label {
            font-size: 12px;
            opacity: 0.9;
        }

        .profile-menu {
            padding: 0;
        }

        .menu-section {
            margin-bottom: 30px;
        }

        .menu-section-title {
            font-size: 18px;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 15px;
            padding: 0 5px;
        }

        .menu-item {
            display: flex;
            align-items: center;
            padding: 15px;
            background: #fff;
            border-radius: 15px;
            margin-bottom: 10px;
            box-shadow: 0 2px 10px rgba(74, 26, 92, 0.05);
            cursor: pointer;
            transition: all 0.3s ease;
            border: 1px solid rgba(74, 26, 92, 0.05);
        }

        .menu-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(74, 26, 92, 0.1);
            border-color: #FF6B6B;
        }

        .menu-item-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255, 107, 107, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            margin-right: 15px;
            color: #FF6B6B;
        }

        .menu-item-content {
            flex: 1;
        }

        .menu-item-title {
            font-size: 16px;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 3px;
        }

        .menu-item-subtitle {
            font-size: 14px;
            color: #6c757d;
        }

        .menu-item-arrow {
            font-size: 18px;
            color: #6c757d;
        }

        .logout-section {
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #e9ecef;
        }

        .logout-btn {
            width: 100%;
            padding: 15px;
            background: #fff;
            border: 2px solid #e74c3c;
            border-radius: 15px;
            color: #e74c3c;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .logout-btn:hover {
            background: #e74c3c;
            color: #fff;
        }

        /* Location Button */
        .location-btn {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, #FF6B6B, #FF8E53);
            border: none;
            border-radius: 50%;
            color: white;
            font-size: 20px;
            cursor: pointer;
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
            z-index: 100;
        }

        .location-btn:hover {
            transform: translateX(-50%) translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 107, 107, 0.5);
        }

        .notification {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: #FF6B6B;
            color: white;
            padding: 12px 20px;
            border-radius: 25px;
            font-size: 14px;
            z-index: 1000;
            animation: slideDown 0.3s ease;
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
        }

        @keyframes slideDown {
            from { transform: translateX(-50%) translateY(-100%); opacity: 0; }
            to { transform: translateX(-50%) translateY(0); opacity: 1; }
        }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: #6c757d;
        }

        .empty-state-icon {
            font-size: 48px;
            margin-bottom: 20px;
            opacity: 0.3;
        }

        .feedback-btn {
            background: linear-gradient(135deg, #FF6B6B, #FF8E53);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 25px;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
            transition: all 0.3s ease;
            margin-bottom: 20px;
        }

        /* Advanced Filters */
        .advanced-filters {
            margin-bottom: 25px;
        }

        .filters-toggle {
            background: linear-gradient(135deg, rgba(74, 26, 92, 0.1) 0%, rgba(45, 11, 54, 0.1) 100%);
            border: 2px solid rgba(74, 26, 92, 0.2);
            color: #4A1A5C;
            padding: 12px 20px;
            border-radius: 15px;
            cursor: pointer;
            font-weight: 600;
            text-align: center;
            transition: all 0.3s ease;
            margin-bottom: 15px;
        }

        .filters-toggle:hover {
            background: linear-gradient(135deg, #4A1A5C 0%, #2D0B36 100%);
            color: white;
            transform: translateY(-2px);
        }

        .filters-panel {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            border: 2px solid rgba(74, 26, 92, 0.1);
        }

        .filters-panel.expanded {
            max-height: 2000px;
        }

        .filter-category-compact {
            margin-bottom: 20px;
            padding: 15px;
        }

        .category-header-compact {
            background: linear-gradient(135deg, #4A1A5C 0%, #2D0B36 100%);
            color: white;
            padding: 12px 20px;
            font-weight: bold;
            font-size: 1em;
            border-radius: 12px;
            margin-bottom: 10px;
            position: relative;
        }

        .category-header-compact::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 2px;
            background: linear-gradient(90deg, #FF8E53, #FF6B6B, #FF8E53);
        }

        .filter-options-compact {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 8px;
        }

        .filter-item-compact {
            padding: 8px 12px;
            cursor: pointer;
            border: 2px solid rgba(74, 26, 92, 0.15);
            border-radius: 10px;
            transition: all 0.3s ease;
            font-size: 0.85em;
            text-align: center;
            background: rgba(255, 255, 255, 0.8);
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .filter-item-compact:hover {
            border-color: #4A1A5C;
            background: rgba(74, 26, 92, 0.05);
            transform: translateY(-1px);
        }

        .filter-item-compact.selected {
            background: linear-gradient(135deg, #4A1A5C 0%, #2D0B36 100%);
            color: white;
            border-color: #4A1A5C;
            font-weight: bold;
        }

        .selected-filters-compact {
            padding: 15px;
            background: rgba(74, 26, 92, 0.05);
            border-radius: 10px;
            margin-top: 15px;
        }

        .selected-filters-compact h4 {
            margin-bottom: 10px;
            color: #4A1A5C;
            font-size: 1em;
        }

        .filter-tags-compact {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
        }

        .filter-tag-compact {
            background: linear-gradient(135deg, #4A1A5C 0%, #2D0B36 100%);
            color: white;
            padding: 6px 12px;
            border-radius: 15px;
            font-size: 0.8em;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .filter-tag-compact .remove {
            cursor: pointer;
            font-weight: bold;
        }

        .filter-tag-compact .remove:hover {
            color: #FF8E53;
        }
    </style>
</head>
<body>
    <!-- Splash Screen -->
    <div class="splash-screen" id="splashScreen">
        <div class="splash-logo">
            <div class="wine-glass">
                <div class="wine-liquid"></div>
                <div class="base"></div>
            </div>
        </div>
        <h1 class="splash-title">SOIF</h1>
        <p class="splash-subtitle">Trouve ton bar idéal à Montpellier et au delà...</p>
        <div class="loading-dots">
            <div class="dot"></div>
            <div class="dot"></div>
            <div class="dot"></div>
        </div>
    </div>

    <!-- App Container -->
    <div class="app-container" id="appContainer">
        <!-- Header -->
        <div class="header">
            <div class="header-logo">
                <div class="wine-glass-small">
                    <div class="wine-liquid-small"></div>
                    <div class="base-small"></div>
                </div>
            </div>
            <h1>SOIF</h1>
            <div class="tagline">Trouve ton bar idéal !</div>
        </div>

        <!-- Navigation -->
        <div class="nav-tabs">
            <button class="nav-tab active" data-tab="search">🔍 Rechercher</button>
            <button class="nav-tab" data-tab="events">🎉 Événements</button>
            <button class="nav-tab" data-tab="social">👥 Social</button>
            <button class="nav-tab" data-tab="favorites">❤️ Favoris</button>
            <button class="nav-tab" data-tab="profile">👤 Profil</button>
        </div>

        <!-- Search Content -->
        <div id="search-content" class="content">
            <div style="text-align: center;">
                <button class="feedback-btn" onclick="openFeedbackForm()">
                    💬 Teste et donne ton AVIS !
                </button>
            </div>

            <div class="search-box">
                <span class="search-icon">🔍</span>
                <input type="text" class="search-input" placeholder="Rechercher un bar à Montpellier..." id="searchInput">
            </div>

            <!-- Advanced Filters Section -->
            <div class="advanced-filters">
                <div class="filters-toggle" onclick="toggleAdvancedFilters()">
                    🎯 Filtres Avancés (14 catégories)
                </div>
                
                <div class="filters-panel" id="advancedFiltersPanel">
                    <div class="filter-category-compact">
                        <div class="category-header-compact">✨ Caractéristiques</div>
                        <div class="filter-options-compact">
                            <div class="filter-item-compact" data-filter="terrasse">☀️ Terrasse</div>
                            <div class="filter-item-compact" data-filter="wifi">📶 WiFi</div>
                            <div class="filter-item-compact" data-filter="happy-hour">🥂 Happy Hour</div>
                            <div class="filter-item-compact" data-filter="ouvert">✅ Ouvert maintenant</div>
                            <div class="filter-item-compact" data-filter="jeux">🎲 Jeux de société</div>
                            <div class="filter-item-compact" data-filter="petanque">🎯 Pétanque</div>
                            <div class="filter-item-compact" data-filter="billard">🎱 Billard</div>
                            <div class="filter-item-compact" data-filter="tv">📺 Écrans TV</div>
                            <div class="filter-item-compact" data-filter="clim">❄️ Climatisé</div>
                            <div class="filter-item-compact" data-filter="chauffage">🔥 Chauffage ext.</div>
                            <div class="filter-item-compact" data-filter="parking">🅿️ Parking</div>
                        </div>
                    </div>

                    <div class="filter-category-compact">
                        <div class="category-header-compact">🏙️ Quartiers</div>
                        <div class="filter-options-compact">
                            <div class="filter-item-compact" data-filter="ecusson">🛡️ Écusson</div>
                            <div class="filter-item-compact" data-filter="antigone">🏛️ Antigone</div>
                            <div class="filter-item-compact" data-filter="comedie">🎭 Comédie</div>
                            <div class="filter-item-compact" data-filter="gare">🚂 Gare</div>
                            <div class="filter-item-compact" data-filter="beaux-arts">🎨 Beaux-Arts</div>
                            <div class="filter-item-compact" data-filter="port-marianne">⚓ Port Marianne</div>
                            <div class="filter-item-compact" data-filter="lez">🏞️ Rives du Lez</div>
                            <div class="filter-item-compact" data-filter="hopitaux">🏫 Hôpitaux-Facultés</div>
                            <div class="filter-item-compact" data-filter="peyrou">🏰 Peyrou</div>
                            <div class="filter-item-compact" data-filter="plage">🏖️ Plage</div>
                        </div>
                    </div>

                    <div class="filter-category-compact">
                        <div class="category-header-compact">🍻 Type de bar</div>
                        <div class="filter-options-compact">
                            <div class="filter-item-compact" data-filter="bar-bieres">🍺 Bar à bières</div>
                            <div class="filter-item-compact" data-filter="bar-vins">🍷 Bar à vins</div>
                            <div class="filter-item-compact" data-filter="bar-cocktails">🍸 Bar à cocktails</div>
                            <div class="filter-item-compact" data-filter="pub">🏴󠁧󠁢󠁥󠁮󠁧󠁿 Pub</div>
                            <div class="filter-item-compact" data-filter="brasserie">🍻 Brasserie</div>
                            <div class="filter-item-compact" data-filter="cave">🍇 Cave à vin</div>
                            <div class="filter-item-compact" data-filter="speakeasy">🤫 Speakeasy</div>
                            <div class="filter-item-compact" data-filter="sports-bar">⚽ Sports bar</div>
                            <div class="filter-item-compact" data-filter="rooftop">🏙️ Rooftop</div>
                            <div class="filter-item-compact" data-filter="lounge">🛋️ Lounge</div>
                        </div>
                    </div>

                    <div class="filter-category-compact">
                        <div class="category-header-compact">🎭 Ambiance</div>
                        <div class="filter-options-compact">
                            <div class="filter-item-compact" data-filter="cosy">🛋️ Cosy</div>
                            <div class="filter-item-compact" data-filter="tendance">✨ Tendance</div>
                            <div class="filter-item-compact" data-filter="romantique">❤️ Romantique</div>
                            <div class="filter-item-compact" data-filter="sport">⚽ Sport</div>
                            <div class="filter-item-compact" data-filter="festif">🎉 Festif</div>
                            <div class="filter-item-compact" data-filter="calme">🧘 Calme</div>
                            <div class="filter-item-compact" data-filter="anime">💃 Animé</div>
                            <div class="filter-item-compact" data-filter="intime">🤫 Intime</div>
                        </div>
                    </div>

                    <div class="selected-filters-compact" id="selectedFiltersCompact" style="display: none;">
                        <h4>🎯 Filtres sélectionnés :</h4>
                        <div class="filter-tags-compact" id="filterTagsCompact"></div>
                    </div>
                </div>
            </div>

            <div class="filters" id="filtersContainer">
                <!-- Basic filters generated by JS -->
            </div>

            <div class="bars-grid" id="barsContainer">
                <!-- Bars generated by JS -->
            </div>
        </div>

        <!-- Events Content -->
        <div id="events-content" class="content hidden">
            <div class="events-header">
                <div class="events-title">
                    <h2>🎉 Événements</h2>
                    <button class="create-event-btn" onclick="showCreateEvent()">+ Créer</button>
                </div>
                <div class="events-filters">
                    <button class="event-filter-btn active" data-filter="all">Tous</button>
                    <button class="event-filter-btn" data-filter="today">Aujourd'hui</button>
                    <button class="event-filter-btn" data-filter="week">Cette semaine</button>
                    <button class="event-filter-btn" data-filter="friends">Mes amis</button>
                </div>
            </div>

            <div class="events-list" id="eventsList">
                <!-- Events generated by JS -->
            </div>
        </div>

        <!-- Social Content -->
        <div id="social-content" class="content hidden">
            <div class="friends-section">
                <div class="section-title">
                    📍 Amis dans les parages
                </div>
                <div class="friends-list" id="friendsList">
                    <!-- Friends generated by JS -->
                </div>
            </div>

            <div class="section-title">
                🔥 Bars populaires maintenant
            </div>
            <div class="bars-grid" id="popularBars">
                <!-- Popular bars shown here -->
            </div>
        </div>

        <!-- Favorites Content -->
        <div id="favorites-content" class="content hidden">
            <div class="section-title">
                ❤️ Mes bars favoris
            </div>
            <div class="bars-grid" id="favoriteBars">
                <!-- Favorite bars shown here -->
            </div>
        </div>

        <!-- Profile Content -->
        <div id="profile-content" class="content hidden">
            <div class="profile-header">
                <div class="profile-avatar">
                    <span class="avatar-text">SL</span>
                    <button class="edit-avatar-btn">✏️</button>
                </div>
                <h2 class="profile-name">Sophie Larmaillard</h2>
                <p class="profile-email">soif.mybarfinder@gmail.com</p>
                <div class="profile-stats">
                    <div class="stat">
                        <span class="stat-number">18</span>
                        <span class="stat-label">Bars visités</span>
                    </div>
                    <div class="stat">
                        <span class="stat-number">12</span>
                        <span class="stat-label">Favoris</span>
                    </div>
                    <div class="stat">
                        <span class="stat-number">36</span>
                        <span class="stat-label">Avis donnés</span>
                    </div>
                </div>
            </div>

            <div class="profile-menu">
                <div class="menu-section">
                    <h3 class="menu-section-title">Mes goûts</h3>
                    <div class="menu-item" onclick="showProfileSection('tastes')">
                        <div class="menu-item-icon">🎤</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Karaoké</div>
                            <div class="menu-item-subtitle">J'adore chanter entre amis</div>
                        </div>
                    </div>
                    
                    <div class="menu-item" onclick="showProfileSection('tastes')">
                        <div class="menu-item-icon">🍺</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Bière</div>
                            <div class="menu-item-subtitle">Amateur de bières artisanales</div>
                        </div>
                    </div>

                    <div class="menu-item" onclick="showProfileSection('tastes')">
                        <div class="menu-item-icon">🏉</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Rugby</div>
                            <div class="menu-item-subtitle">Fan de l'ovalie</div>
                        </div>
                    </div>
                </div>

                <div class="menu-section">
                    <h3 class="menu-section-title">Mon compte</h3>
                    <div class="menu-item" onclick="showProfileSection('personal')">
                        <div class="menu-item-icon">👤</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Informations personnelles</div>
                            <div class="menu-item-subtitle">Nom, email, téléphone</div>
                        </div>
                        <div class="menu-item-arrow">→</div>
                    </div>
                    
                    <div class="menu-item" onclick="showProfileSection('preferences')">
                        <div class="menu-item-icon">⚙️</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Préférences</div>
                            <div class="menu-item-subtitle">Types de bars préférés</div>
                        </div>
                        <div class="menu-item-arrow">→</div>
                    </div>

                    <div class="menu-item" onclick="showProfileSection('privacy')">
                        <div class="menu-item-icon">🔒</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Confidentialité</div>
                            <div class="menu-item-subtitle">Géolocalisation, visibilité</div>
                        </div>
                        <div class="menu-item-arrow">→</div>
                    </div>
                </div>

                <div class="menu-section">
                    <h3 class="menu-section-title">Activité</h3>
                    <div class="menu-item" onclick="showProfileSection('history')">
                        <div class="menu-item-icon">📍</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Historique des visites</div>
                            <div class="menu-item-subtitle">Bars récemment visités</div>
                        </div>
                        <div class="menu-item-arrow">→</div>
                    </div>

                    <div class="menu-item" onclick="showProfileSection('reviews')">
                        <div class="menu-item-icon">⭐</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Mes avis</div>
                            <div class="menu-item-subtitle">Avis et notes donnés</div>
                        </div>
                        <div class="menu-item-arrow">→</div>
                    </div>

                    <div class="menu-item" onclick="showProfileSection('friends')">
                        <div class="menu-item-icon">👥</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Mes amis</div>
                            <div class="menu-item-subtitle">Gérer mon réseau</div>
                        </div>
                        <div class="menu-item-arrow">→</div>
                    </div>
                </div>

                <div class="menu-section">
                    <h3 class="menu-section-title">Application</h3>
                    <div class="menu-item" onclick="showProfileSection('notifications')">
                        <div class="menu-item-icon">🔔</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">Notifications</div>
                            <div class="menu-item-subtitle">Alertes et rappels</div>
                        </div>
                        <div class="menu-item-arrow">→</div>
                    </div>

                    <div class="menu-item" onclick="showProfileSection('about')">
                        <div class="menu-item-icon">ℹ️</div>
                        <div class="menu-item-content">
                            <div class="menu-item-title">À propos</div>
                            <div class="menu-item-subtitle">Version 1.0.0</div>
                        </div>
                        <div class="menu-item-arrow">→</div>
                    </div>
                </div>

                <div class="logout-section">
                    <button class="logout-btn" onclick="logout()">
                        🚪 Se déconnecter
                    </button>
                </div>
            </div>
        </div>

        <!-- Location Button -->
        <button class="location-btn" id="locationBtn">🎯</button>
    </div>

    <script>
        // App Data optimisé avec bars authentiques
        const appData = {
            filters: [
                { id: 'terrasse', name: '🖏️ Terrasse' },
                { id: 'wifi', name: '📶 WiFi' },
                { id: 'cocktails', name: '🍹 Cocktails' },
                { id: 'musique', name: '🎵 Musique Live' },
                { id: 'sport', name: '📺 Sport TV' },
                { id: 'jeux', name: '🎮 Jeux' },
                { id: 'happy', name: '⏰ Happy Hour' },
                { id: 'calme', name: '🍃 Calme' },
                { id: 'festif', name: '🎉 Festif' },
                { id: 'rooftop', name: '🏢 Rooftop' }
            ],
            
            bars: [
                {
                    id: 1,
                    name: "Game Taverne",
                    type: "Bar à jeux",
                    features: ["jeux", "wifi", "cocktails", "calme"],
                    rating: 4.5,
                    distance: "0.3 km",
                    visitors: 28,
                    quarter: "ecusson"
                },
                {
                    id: 2,
                    name: "Invader Bar",
                    type: "Bar Gaming Rétro",
                    features: ["jeux", "wifi", "cocktails", "festif"],
                    rating: 4.7,
                    distance: "0.4 km",
                    visitors: 35,
                    quarter: "beaux-arts"
                },
                {
                    id: 3,
                    name: "Burger'N'Co",
                    type: "Bar Restaurant",
                    features: ["terrasse", "wifi", "happy", "festif"],
                    rating: 4.3,
                    distance: "0.2 km",
                    visitors: 42,
                    quarter: "comedie"
                },
                {
                    id: 4,
                    name: "Le Palace",
                    type: "Bar Discothèque",
                    features: ["festif", "musique", "cocktails"],
                    rating: 4.6,
                    distance: "0.8 km",
                    visitors: 65,
                    quarter: "antigone"
                },
                {
                    id: 5,
                    name: "L'Arbre Blanc",
                    type: "Rooftop Bar",
                    features: ["rooftop", "cocktails", "terrasse", "festif"],
                    rating: 4.8,
                    distance: "1.2 km",
                    visitors: 24,
                    quarter: "port-marianne"
                },
                {
                    id: 6,
                    name: "Le Café Paume",
                    type: "Café Concert",
                    features: ["musique", "terrasse", "calme", "wifi"],
                    rating: 4.2,
                    distance: "0.6 km",
                    visitors: 15,
                    quarter: "ecusson"
                },
                {
                    id: 7,
                    name: "La Chistera",
                    type: "Bar Basque",
                    features: ["sport", "terrasse", "festif", "happy"],
                    rating: 4.5,
                    distance: "0.7 km",
                    visitors: 32,
                    quarter: "gare"
                }
            ],
            
            friends: [
                { name: "Marie", location: "Game Taverne", online: true },
                { name: "Jerry", location: "Invader Bar", online: true },
                { name: "Caro", location: "L'Arbre Blanc", online: true },
                { name: "Seb", location: "En route", online: true },
                { name: "Sophie", location: "Le Palace", online: false }
            ],

            events: [
                {
                    id: 1,
                    title: "Soirée Gaming & Cocktails",
                    bar: "Game Taverne",
                    date: "2025-09-22",
                    time: "20:00",
                    description: "Venez découvrir notre nouvelle sélection de jeux avec des cocktails signatures !",
                    maxParticipants: 20,
                    participants: ["Marie", "Jerry", "Seb"],
                    organizer: "Sophie Larmaillard",
                    popular: true
                },
                {
                    id: 2,
                    title: "Afterwork Networking",
                    bar: "Burger'N'Co", 
                    date: "2025-09-21",
                    time: "18:30",
                    description: "Rencontres professionnelles dans une ambiance rock détendue",
                    maxParticipants: 25,
                    participants: ["Caro", "Marie"],
                    organizer: "Jerry Martin",
                    popular: false
                },
                {
                    id: 3,
                    title: "Tournoi Mario Kart",
                    bar: "Invader Bar",
                    date: "2025-09-23", 
                    time: "19:00",
                    description: "Tournoi rétro gaming avec lots à gagner. Inscription gratuite !",
                    maxParticipants: 16,
                    participants: ["Seb", "Sophie"],
                    organizer: "Marie Dubois",
                    popular: false
                },
                {
                    id: 4,
                    title: "Soirée Rooftop Sunset",
                    bar: "L'Arbre Blanc",
                    date: "2025-09-24",
                    time: "19:00", 
                    description: "Admirez le coucher de soleil sur Montpellier avec des cocktails d'exception",
                    maxParticipants: 30,
                    participants: ["Marie", "Jerry", "Caro", "Seb"],
                    organizer: "Seb Rivera",
                    popular: true
                },
                {
                    id: 5,
                    title: "Soirée Étudiante",
                    bar: "Le Palace",
                    date: "2025-09-25",
                    time: "22:00",
                    description: "La plus grosse soirée étudiante de Montpellier avec DJs live",
                    maxParticipants: 200,
                    participants: ["Sophie", "Jerry"],
                    organizer: "Caro Chen",
                    popular: true
                }
            ],
            
            activeFilters: [],
            advancedFilters: new Set(),
            favorites: JSON.parse(localStorage.getItem('soif_favorites') || '[]'),
            currentTab: 'search',
            activeEventFilter: 'all',
            userJoinedEvents: JSON.parse(localStorage.getItem('soif_joined_events') || '[]')
        };

        // Functions
        function showCreateEvent() {
            showNotification('Fonctionnalité de création d\'événement à venir ! 🚧');
        }

        function joinEvent(eventId) {
            const event = appData.events.find(e => e.id === eventId);
            if (!event) return;
            
            const isJoined = appData.userJoinedEvents.includes(eventId);
            
            if (isJoined) {
                appData.userJoinedEvents = appData.userJoinedEvents.filter(id => id !== eventId);
                event.participants = event.participants.filter(p => p !== "Sophie Larmaillard");
                showNotification('Vous avez quitté l\'événement');
            } else {
                if (event.participants.length >= event.maxParticipants) {
                    showNotification('Événement complet !');
                    return;
                }
                appData.userJoinedEvents.push(eventId);
                if (!event.participants.includes("Sophie Larmaillard")) {
                    event.participants.push("Sophie Larmaillard");
                }
                showNotification('Vous participez à l\'événement ! 🎉');
            }
            
            localStorage.setItem('soif_joined_events', JSON.stringify(appData.userJoinedEvents));
            renderEvents();
        }

        function shareEvent(eventId) {
            const event = appData.events.find(e => e.id === eventId);
            if (event) {
                showNotification(`Événement "${event.title}" partagé avec vos amis ! 📤`);
            }
        }

        function filterEvents(filter) {
            appData.activeEventFilter = filter;
            
            document.querySelectorAll('.event-filter-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            document.querySelector(`[data-filter="${filter}"]`).classList.add('active');
            
            renderEvents();
        }

        function showProfileSection(section) {
            const messages = {
                'personal': 'Informations personnelles - En développement',
                'preferences': 'Préférences configurées avec succès',
                'privacy': 'Paramètres de confidentialité mis à jour',
                'history': 'Historique des 18 derniers bars visités',
                'reviews': 'Vous avez donné 36 avis avec une note moyenne de 4.3/5',
                'friends': 'Vous avez 24 amis connectés sur SOIF',
                'notifications': 'Notifications activées pour les amis à proximité',
                'about': 'SOIF BarFinder v1.0.0 - Créé avec ❤️ à Montpellier',
                'tastes': 'Vos goûts personnalisent vos recommandations de bars !'
            };
            
            showNotification(messages[section] || 'Section en développement');
        }

        function logout() {
            if (confirm('Êtes-vous sûr de vouloir vous déconnecter ?')) {
                showNotification('À bientôt sur SOIF ! 👋');
                setTimeout(() => {
                    switchTab('search');
                }, 2000);
            }
        }

        function showNotification(message) {
            const notification = document.createElement('div');
            notification.className = 'notification';
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 3000);
        }

        function openFeedbackForm() {
            const formUrl = 'https://soif-market.vercel.app/';
            window.open(formUrl, '_blank');
            showNotification('Questionnaire ouvert dans un nouvel onglet 📋');
        }

        // Toggle advanced filters panel
        function toggleAdvancedFilters() {
            const panel = document.getElementById('advancedFiltersPanel');
            const toggle = document.querySelector('.filters-toggle');
            
            panel.classList.toggle('expanded');
            
            if (panel.classList.contains('expanded')) {
                toggle.textContent = '🎯 Masquer les Filtres Avancés';
            } else {
                toggle.textContent = '🎯 Filtres Avancés (14 catégories)';
            }
        }

        function init() {
            setupNavigation();
            setupFilters();
            setupSearch();
            setupLocationButton();
            setupEventFilters();
            renderBars(appData.bars);
            renderFriends();
            renderFavorites();
            renderEvents();
        }

        function setupNavigation() {
            const tabs = document.querySelectorAll('.nav-tab');
            tabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    const targetTab = this.dataset.tab;
                    switchTab(targetTab);
                });
            });
        }

        function switchTab(tabName) {
            document.querySelectorAll('.nav-tab').forEach(tab => {
                tab.classList.remove('active');
            });
            document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');
            
            document.querySelectorAll('.content').forEach(content => {
                content.classList.add('hidden');
            });
            
            document.getElementById(`${tabName}-content`).classList.remove('hidden');
            
            appData.currentTab = tabName;
            
            if (tabName === 'social') {
                renderPopularBars();
            } else if (tabName === 'favorites') {
                renderFavorites();
            } else if (tabName === 'events') {
                renderEvents();
            }
        }

        function setupFilters() {
            const container = document.getElementById('filtersContainer');
            container.innerHTML = '';
            
            appData.filters.forEach(filter => {
                const btn = document.createElement('button');
                btn.className = 'filter-btn';
                btn.textContent = filter.name;
                btn.dataset.filterId = filter.id;
                
                btn.addEventListener('click', function() {
                    toggleFilter(filter.id, this);
                });
                
                container.appendChild(btn);
            });
        }

        function toggleFilter(filterId, btnElement) {
            const index = appData.activeFilters.indexOf(filterId);
            
            if (index > -1) {
                appData.activeFilters.splice(index, 1);
                btnElement.classList.remove('active');
            } else {
                appData.activeFilters.push(filterId);
                btnElement.classList.add('active');
            }
            
            filterBars();
        }

        function filterBars() {
            let filteredBars = appData.bars;
            
            if (appData.activeFilters.length > 0) {
                filteredBars = appData.bars.filter(bar => {
                    return appData.activeFilters.some(filter => bar.features.includes(filter));
                });
            }
            
            // Also apply advanced filters if any are selected
            if (appData.advancedFilters.size > 0) {
                filteredBars = filteredBars.filter(bar => {
                    return Array.from(appData.advancedFilters).every(filter => {
                        // Check features
                        if (bar.features.includes(filter)) return true;
                        
                        // Check quarter
                        if (bar.quarter === filter) return true;
                        
                        // Check bar type
                        if (bar.type.toLowerCase().includes(filter.replace('-', ' '))) return true;
                        
                        return false;
                    });
                });
            }
            
            renderBars(filteredBars);
        }

        function setupSearch() {
            const searchInput = document.getElementById('searchInput');
            searchInput.addEventListener('input', function() {
                const query = this.value.toLowerCase();
                const filteredBars = appData.bars.filter(bar => {
                    return bar.name.toLowerCase().includes(query) || 
                           bar.type.toLowerCase().includes(query);
                });
                renderBars(filteredBars);
            });
        }

        function renderBars(bars) {
            const container = document.getElementById('barsContainer');
            container.innerHTML = '';
            
            if (bars.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <div class="empty-state-icon">🔍</div>
                        <p>Aucun bar trouvé</p>
                        <p style="font-size: 14px; margin-top: 10px;">Essayez de modifier vos filtres</p>
                    </div>
                `;
                return;
            }
            
            bars.forEach(bar => {
                const barCard = createBarCard(bar);
                container.appendChild(barCard);
            });
        }

        function createBarCard(bar) {
            const card = document.createElement('div');
            card.className = 'bar-card';
            
            const features = bar.features.map(featureId => {
                const filter = appData.filters.find(f => f.id === featureId);
                return filter ? `<span class="feature-tag">${filter.name}</span>` : '';
            }).join('');
            
            const isFavorite = appData.favorites.includes(bar.id);
            
            card.innerHTML = `
                <div class="bar-header">
                    <div>
                        <div class="bar-name">${bar.name}</div>
                        <div class="bar-type">${bar.type}</div>
                    </div>
                    <button class="heart-btn ${isFavorite ? 'liked' : ''}" data-bar-id="${bar.id}">
                        ❤️
                    </button>
                </div>
                <div class="bar-features">${features}</div>
                <div class="bar-info">
                    <div class="rating">⭐ ${bar.rating}</div>
                    <div class="distance">📍 ${bar.distance}</div>
                    <div class="visitors">👥 ${bar.visitors}</div>
                </div>
            `;
            
            const heartBtn = card.querySelector('.heart-btn');
            heartBtn.addEventListener('click', function(e) {
                e.stopPropagation();
                toggleFavorite(bar.id);
            });
            
            return card;
        }

        function toggleFavorite(barId) {
            const index = appData.favorites.indexOf(barId);
            
            if (index > -1) {
                appData.favorites.splice(index, 1);
                showNotification('Retiré des favoris !');
            } else {
                appData.favorites.push(barId);
                showNotification('Ajouté aux favoris !');
            }
            
            localStorage.setItem('soif_favorites', JSON.stringify(appData.favorites));
            
            if (appData.currentTab === 'search') {
                filterBars();
            } else if (appData.currentTab === 'favorites') {
                renderFavorites();
            }
        }

        function renderFriends() {
            const container = document.getElementById('friendsList');
            container.innerHTML = '';
            
            appData.friends.forEach(friend => {
                const friendElement = document.createElement('div');
                friendElement.className = 'friend-item';
                
                friendElement.innerHTML = `
                    <div class="friend-avatar">
                        👤
                        ${friend.online ? '<div class="online-dot"></div>' : ''}
                    </div>
                    <div class="friend-name">${friend.name}</div>
                    <div class="friend-location">${friend.location}</div>
                `;
                
                container.appendChild(friendElement);
            });
        }

        function renderPopularBars() {
            const container = document.getElementById('popularBars');
            const popularBars = [...appData.bars]
                .sort((a, b) => b.visitors - a.visitors)
                .slice(0, 3);
            
            container.innerHTML = '';
            popularBars.forEach(bar => {
                const barCard = createBarCard(bar);
                container.appendChild(barCard);
            });
        }

        function renderFavorites() {
            const container = document.getElementById('favoriteBars');
            const favoriteBars = appData.bars.filter(bar => appData.favorites.includes(bar.id));
            
            container.innerHTML = '';
            
            if (favoriteBars.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <div class="empty-state-icon">❤️</div>
                        <p>Aucun bar favori</p>
                        <p style="font-size: 14px; margin-top: 10px;">Ajoutez des bars à vos favoris en appuyant sur ❤️</p>
                    </div>
                `;
                return;
            }
            
            favoriteBars.forEach(bar => {
                const barCard = createBarCard(bar);
                container.appendChild(barCard);
            });
        }

        function setupLocationButton() {
            const btn = document.getElementById('locationBtn');
            btn.addEventListener('click', function() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        function(position) {
                            showNotification('Position mise à jour !');
                            const nearbyBars = appData.bars.slice(0, 4);
                            renderBars(nearbyBars);
                        },
                        function(error) {
                            showNotification('Géolocalisation non disponible');
                        }
                    );
                } else {
                    showNotification('Géolocalisation non supportée');
                }
            });
        }

        function setupEventFilters() {
            const filterBtns = document.querySelectorAll('.event-filter-btn');
            filterBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const filter = this.dataset.filter;
                    filterEvents(filter);
                });
            });
        }

        function renderEvents() {
            const container = document.getElementById('eventsList');
            let eventsToShow = [...appData.events];
            
            const today = new Date().toISOString().split('T')[0];
            const thisWeekStart = new Date();
            const thisWeekEnd = new Date();
            thisWeekEnd.setDate(thisWeekEnd.getDate() + 7);
            
            switch(appData.activeEventFilter) {
                case 'today':
                    eventsToShow = eventsToShow.filter(event => event.date === today);
                    break;
                case 'week':
                    eventsToShow = eventsToShow.filter(event => {
                        const eventDate = new Date(event.date);
                        return eventDate >= thisWeekStart && eventDate <= thisWeekEnd;
                    });
                    break;
                case 'friends':
                    eventsToShow = eventsToShow.filter(event => 
                        event.participants.some(p => appData.friends.some(f => f.name === p))
                    );
                    break;
            }
            
            container.innerHTML = '';
            
            if (eventsToShow.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <div class="empty-state-icon">🎉</div>
                        <p>Aucun événement trouvé</p>
                        <p style="font-size: 14px; margin-top: 10px;">Créez le premier événement !</p>
                    </div>
                `;
                return;
            }
            
            eventsToShow.forEach(event => {
                const eventCard = createEventCard(event);
                container.appendChild(eventCard);
            });
        }

        function createEventCard(event) {
            const card = document.createElement('div');
            card.className = `event-card ${event.popular ? 'popular' : ''}`;
            
            const eventDate = new Date(event.date);
            const formattedDate = eventDate.toLocaleDateString('fr-FR', { 
                weekday: 'long', 
                day: 'numeric', 
                month: 'long' 
            });
            
            const isJoined = appData.userJoinedEvents.includes(event.id);
            
            card.innerHTML = `
                ${event.popular ? '<div class="event-badge">Populaire</div>' : ''}
                
                <div class="event-title">${event.title}</div>
                <div class="event-bar">📍 ${event.bar}</div>
                <div class="event-datetime">
                    <span>📅 ${formattedDate}</span>
                    <span>⏰ ${event.time}</span>
                </div>
                <div class="event-description">${event.description}</div>
                
                <div class="event-actions">
                    <button class="join-btn ${isJoined ? 'joined' : ''}" 
                            onclick="joinEvent(${event.id})">
                        ${isJoined ? '✓ Inscrit' : 'Participer'}
                    </button>
                    <button class="share-btn" onclick="shareEvent(${event.id})">
                        📤
                    </button>
                </div>
            `;
            
            return card;
        }

        // Initialize app
        document.addEventListener('DOMContentLoaded', function() {
            const splashScreen = document.getElementById('splashScreen');
            const appContainer = document.getElementById('appContainer');
            
            setTimeout(function() {
                splashScreen.classList.add('hidden');
                appContainer.classList.add('visible');
            }, 3000);
            
            init();
        });
    </script>
</body>
</html>
